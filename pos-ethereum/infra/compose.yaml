services:
    proxy:
        image: 'jc21/nginx-proxy-manager:latest'
        restart: unless-stopped
        user: root
        container_name: 'proxy-manager'
        ports:
            - '80:80' # Public HTTP Port
            - '443:443' # Public HTTPS Port
            - '8100:81' # Admin Web Port
        environment:
            DB_SQLITE_FILE: '/data/database.sqlite'
        volumes:
            - ./proxy/custom:/data/nginx/custom
            - ./proxy/data:/data
            - ./proxy/letsencrypt:/etc/letsencrypt

    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        restart: always
        ports:
          - "9000:9000"
        command: -H unix:///var/run/docker.sock
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./portainer/data:/data



    blockscout:
      image: blockscout/blockscout:latest
      pull_policy: always
      restart: always
      stop_grace_period: 5m
      container_name: 'blockscout'
      command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
      ports:
        - 8090:8080
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      env_file:
        -  ./blockscout.env
      volumes:
        - ./blockscout/logs/:/app/logs/

    visualizer:
      image: ghcr.io/blockscout/visualizer:latest
      pull_policy: always
      restart: always
      container_name: 'visualizer'
      env_file:
        -  ../envs/common-visualizer.env

    blockscout-front:
      image: ghcr.io/blockscout/frontend:latest
      pull_policy: always
      restart: always
      container_name: 'blockscout-front'
      env_file:
        -  ../envs/common-frontend.env


    db-init:
      image: postgres:15
      volumes:
        - ./blockscout/db-data:/var/lib/postgresql/data
      entrypoint:
        - sh
        - -c
        - |
          chown -R 2000:2000 /var/lib/postgresql/data

    db:
      image: postgres:15
      user: 2000:2000
      shm_size: 256m
      restart: always
      container_name: 'db'
      command: postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000'
      environment:
          POSTGRES_DB: 'blockscout'
          POSTGRES_USER: 'blockscout'
          POSTGRES_PASSWORD: 'ceWb1MeLBEeOIfk65gU8EjF8'
      ports:
        - target: 5432
          published: 7432
      volumes:
        - ./blockscout/db-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U blockscout -d blockscout"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s

